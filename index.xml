<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>gr4n173</title>
        <link>https://example.com/</link>
        <description>About my works and personal blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 02 May 2021 17:55:28 &#43;0800</lastBuildDate>
            <atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Linux Privelege Escalation</title>
    <link>https://example.com/linuxprivsec/</link>
    <pubDate>Sun, 02 May 2021 17:55:28 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://example.com/linuxprivsec/</guid>
    <description><![CDATA[Links: https://medium.com/malware-buddy/security-infographics-9c4d3bd891ef#18dd https://github.com/sagishahar/lpeworkshop
1. Service Exploits mysql Using the exploit from exploit db to get the rootshell. Since mysql is run by root without password where we can create the tables and run the command using function. The MySQL service is running as root and the &ldquo;root&rdquo; user for the service does not have a password assigned. We can use a popular exploit that takes advantage of User Defined Functions (UDFs) to run system commands as root via the MySQL service.]]></description>
</item><item>
    <title>Moee-1</title>
    <link>https://example.com/moee-1/</link>
    <pubDate>Sun, 01 Nov 2020 17:55:28 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://example.com/moee-1/</guid>
    <description><![CDATA[<p>Details about the first part of <code>Moee</code> Series.</p>]]></description>
</item><item>
    <title>Hack The Box: Registry</title>
    <link>https://example.com/registery/</link>
    <pubDate>Sat, 04 Apr 2020 17:55:28 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://example.com/registery/</guid>
    <description><![CDATA[<p><code>Registry</code> box was the hard box. It falls under linux and hard category.Especially to read the root flag was a quite tough one. Iâ€™ll approach this write-up how I solved it, along with the problems that I had to face during this box.</p>]]></description>
</item><item>
    <title>Emoji Support</title>
    <link>https://example.com/emoji-support/</link>
    <pubDate>Tue, 01 Oct 2019 17:55:28 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://example.com/emoji-support/</guid>
    <description><![CDATA[<p>Emoji can be enabled in a Hugo project in a number of ways.</p>]]></description>
</item></channel>
</rss>
